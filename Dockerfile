# Dockerfile –¥–ª—è Render.com deployment
FROM python:3.11-slim

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL maintainer="SIFIBR SB RAS <sifibr@sifibr.irk.ru>"
LABEL description="SIFIBR Microorganisms Collections - Render Deployment"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        gettext \
        postgresql-client \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º requirements –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY requirements.txt .
RUN pip install --upgrade pip setuptools wheel \
    && pip install -r requirements.txt

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
COPY . .

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
RUN mkdir -p /app/staticfiles /app/media

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
RUN python manage.py collectstatic --noinput --clear

# –°–æ–∑–¥–∞–µ–º entrypoint —Å–∫—Ä–∏–ø—Ç –¥–ª—è Render
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "üöÄ Starting SIFIBR Collections on Render..."\n\
\n\
# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏\n\
echo "üìÑ Running migrations..."\n\
python manage.py migrate --noinput\n\
\n\
# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\n\
echo "üìä Creating test data..."\n\
python manage.py create_test_data || echo "Test data already exists"\n\
\n\
# –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\
echo "üë§ Creating superuser..."\n\
python manage.py shell -c "\
from django.contrib.auth.models import User;\
User.objects.filter(username=\"admin\").exists() or \
User.objects.create_superuser(\"admin\", \"admin@sifibr.irk.ru\", \"sifibr_admin_2025\")\
" || echo "Admin user already exists"\n\
\n\
echo "‚úÖ Setup complete! Starting server on port $PORT..."\n\
\n\
# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –ø–æ—Ä—Ç–æ–º –æ—Ç Render\n\
exec gunicorn sifibr_collections.wsgi:application \\\n\
    --bind 0.0.0.0:$PORT \\\n\
    --workers 4 \\\n\
    --worker-class sync \\\n\
    --timeout 120 \\\n\
    --keep-alive 2 \\\n\
    --access-logfile - \\\n\
    --error-logfile -\n\
' > /entrypoint.sh \
    && chmod +x /entrypoint.sh

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/api/health/ || exit 1

# Expose –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç
EXPOSE $PORT

ENTRYPOINT ["/entrypoint.sh"] 