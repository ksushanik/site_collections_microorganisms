#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Docker –æ–±—Ä–∞–∑–∞ –°–ò–§–ò–ë–† –Ω–∞ Docker Hub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/build-and-push.sh [version] [username] [type]
# type: backend (—Ç–æ–ª—å–∫–æ Django) | fullstack (Django + React)

set -e

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_USERNAME="gimmyhat"
DEFAULT_VERSION="latest"
DEFAULT_TYPE="fullstack"

# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
USERNAME=${2:-$DEFAULT_USERNAME}
VERSION=${1:-$DEFAULT_VERSION}
BUILD_TYPE=${3:-$DEFAULT_TYPE}

if [ "$BUILD_TYPE" = "fullstack" ]; then
    IMAGE_NAME="$USERNAME/sifibr-collections-fullstack"
    DOCKERFILE="Dockerfile.fullstack"
else
    IMAGE_NAME="$USERNAME/sifibr-collections"
    DOCKERFILE="Dockerfile"
fi

echo "üê≥ –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Docker –æ–±—Ä–∞–∑–∞ –°–ò–§–ò–ë–†"
echo "======================================"
echo "üë§ Docker Hub username: $USERNAME"
echo "üè∑Ô∏è  –í–µ—Ä—Å–∏—è: $VERSION"
echo "üîß –¢–∏–ø —Å–±–æ—Ä–∫–∏: $BUILD_TYPE"
echo "üì¶ –û–±—Ä–∞–∑: $IMAGE_NAME:$VERSION"
echo "üìÑ Dockerfile: $DOCKERFILE"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "manage.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
echo "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
docker build -f "$DOCKERFILE" -t "$IMAGE_NAME:$VERSION" .

# –ï—Å–ª–∏ –Ω–µ latest, —Ç–∞–∫–∂–µ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ latest
if [ "$VERSION" != "latest" ]; then
    echo "üè∑Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ latest..."
    docker tag "$IMAGE_NAME:$VERSION" "$IMAGE_NAME:latest"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Docker Hub
echo "üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Docker Hub..."
if ! docker info | grep -q "Username:"; then
    echo "‚ùó –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: docker login"
    read -p "–í–æ–π—Ç–∏ —Å–µ–π—á–∞—Å? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker login
    else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
        exit 1
    fi
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–∑ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–∑–∞..."
CONTAINER_ID=$(docker run -d --rm -e DEBUG=True -e DATABASE_URL="sqlite:///test.db" "$IMAGE_NAME:$VERSION")
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
if docker ps | grep -q "$CONTAINER_ID"; then
    echo "‚úÖ –û–±—Ä–∞–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    docker stop "$CONTAINER_ID" > /dev/null 2>&1 || true
else
    echo "‚ùå –û—à–∏–±–∫–∞: –û–±—Ä–∞–∑ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    exit 1
fi

# –ü—É–±–ª–∏–∫—É–µ–º –æ–±—Ä–∞–∑
echo "üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Docker Hub..."
docker push "$IMAGE_NAME:$VERSION"

if [ "$VERSION" != "latest" ]; then
    docker push "$IMAGE_NAME:latest"
fi

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ!"
echo "======================================"
echo "üì¶ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–∑: $IMAGE_NAME:$VERSION"
echo "üåê Docker Hub: https://hub.docker.com/r/$USERNAME/sifibr-collections"
echo ""
echo "üöÄ –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Render.com:"
echo "   1. New ‚Üí Web Service ‚Üí Deploy from registry"
echo "   2. Image URL: $IMAGE_NAME:$VERSION"
echo "   3. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Å–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é)"
echo ""
echo "üìö –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/deployment/RENDER_DOCKERHUB_DEPLOY.md" 