# Dockerfile для React frontend
FROM node:20-alpine as base

# Метаданные
LABEL maintainer="SIFIBR SB RAS <sifibr@sifibr.irk.ru>"
LABEL description="SIFIBR Microorganisms Collections - React Frontend"
LABEL version="1.0.0"

# Устанавливаем системные зависимости
RUN apk add --no-cache \
    git \
    curl

# Этап установки зависимостей
FROM base as dependencies

WORKDIR /app

# Копируем файлы зависимостей
COPY frontend/package*.json ./

# Устанавливаем зависимости
RUN npm ci --only=production \
    && npm cache clean --force

# Этап разработки (для hot reload)
FROM dependencies as development

# Устанавливаем dev зависимости
RUN npm ci

# Копируем исходный код
COPY frontend/ .

# Открываем порт для dev server
EXPOSE 3000

# Команда для разработки
CMD ["npm", "run", "dev"]

# Этап сборки
FROM dependencies as build

# Копируем исходный код
COPY frontend/ .

# Переустанавливаем все зависимости включая dev
RUN npm ci

# Собираем продакшн версию
RUN npm run build

# Продакшн этап с nginx
FROM nginx:alpine as production

# Устанавливаем curl для health check
RUN apk add --no-cache curl

# Копируем собранные файлы
COPY --from=build /app/dist /usr/share/nginx/html

# Копируем конфигурацию nginx
COPY docker/frontend/nginx.conf /etc/nginx/nginx.conf
COPY docker/frontend/default.conf /etc/nginx/conf.d/default.conf

# Создаем директорию для логов
RUN mkdir -p /var/log/nginx

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Открываем порт
EXPOSE 80

# Запускаем nginx
CMD ["nginx", "-g", "daemon off;"] 