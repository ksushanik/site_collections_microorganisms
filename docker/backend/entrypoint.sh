#!/bin/bash

# Entrypoint —Å–∫—Ä–∏–ø—Ç –¥–ª—è Django backend
set -e

echo "üî¨ –ó–∞–ø—É—Å–∫ –°–ò–§–ò–ë–† Django Backend..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
wait_for_db() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
    
    while ! nc -z $DB_HOST $DB_PORT; do
        echo "üîÑ PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 2
    done
    
    echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è Redis
wait_for_redis() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis..."
    
    while ! nc -z $REDIS_HOST $REDIS_PORT; do
        echo "üîÑ Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 2
    done
    
    echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω!"
}

# –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ DATABASE_URL
DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')

# –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Redis –∏–∑ REDIS_URL  
REDIS_HOST=$(echo $REDIS_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
REDIS_PORT=$(echo $REDIS_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DB_HOST=${DB_HOST:-db}
DB_PORT=${DB_PORT:-5432}
REDIS_HOST=${REDIS_HOST:-redis}
REDIS_PORT=${REDIS_PORT:-6379}

# –û–∂–∏–¥–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_db
wait_for_redis

echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Django..."
python manage.py migrate --noinput

echo "üìä –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)..."
python manage.py shell << EOF
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@sifibr.irk.ru', 'sifibr_admin_2025')
    print("‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: admin / sifibr_admin_2025")
else:
    print("‚ÑπÔ∏è –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
EOF

echo "üß¨ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –±–∞–∑–∞ –ø—É—Å—Ç–∞—è)..."
python manage.py shell << EOF
from catalog.models import Collection, Strain
if Collection.objects.count() == 0:
    exec(open('catalog/management/commands/create_extended_test_data.py').read())
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
else:
    print(f"‚ÑπÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç {Collection.objects.count()} –∫–æ–ª–ª–µ–∫—Ü–∏–π")
EOF

echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
python manage.py collectstatic --noinput

echo "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
python manage.py check --deploy

echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üöÄ –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞..."

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –≤ CMD
exec "$@" 